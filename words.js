// Word lists by difficulty
const words = {
  easy: [
    "star",
    "moon",
    "void",
    "glow",
    "flow",
    "wave",
    "beam",
    "pulse",
    "spark",
    "flare",
    "echo",
    "rush",
    "blur",
    "fade",
    "rise",
    "fall",
    "flow",
    "glow",
    "spin",
    "twist",
    "jump",
    "dive",
    "soar",
    "swim",
    "dance",
    "sing",
    "play",
    "run",
    "walk",
    "fly",
    "bird",
    "fish",
    "tree",
    "leaf",
    "wind",
    "rain",
    "snow",
    "fire",
    "ice",
    "rock",
    "time",
    "space",
    "mind",
    "soul",
    "heart",
    "life",
    "hope",
    "dream",
    "light",
    "dark",
    "blue",
    "green",
    "gold",
    "pink",
    "mint",
    "teal",
    "cyan",
    "lime",
    "sage",
    "rose",
    "cool",
    "warm",
    "soft",
    "hard",
    "fast",
    "slow",
    "high",
    "low",
    "deep",
    "wide",
    "calm",
    "wild",
    "free",
    "bold",
    "wise",
    "kind",
    "true",
    "pure",
    "rare",
    "fine",
    "moon",
    "star",
    "sun",
    "sky",
    "sea",
    "land",
    "hill",
    "lake",
    "peak",
    "vale",
    "dawn",
    "dusk",
    "noon",
    "night",
    "day",
    "year",
    "week",
    "hour",
    "time",
    "life",
  ],

  medium: [
    "cosmic",
    "stellar",
    "nebula",
    "galaxy",
    "planet",
    "comet",
    "meteor",
    "quasar",
    "pulsar",
    "nova",
    "crystal",
    "diamond",
    "ruby",
    "sapphire",
    "emerald",
    "pearl",
    "jade",
    "opal",
    "amber",
    "onyx",
    "shadow",
    "phantom",
    "spirit",
    "ghost",
    "dream",
    "vision",
    "memory",
    "wisdom",
    "power",
    "magic",
    "forest",
    "meadow",
    "garden",
    "valley",
    "mountain",
    "river",
    "ocean",
    "desert",
    "island",
    "coast",
    "silver",
    "golden",
    "bronze",
    "copper",
    "platinum",
    "chrome",
    "steel",
    "brass",
    "iron",
    "metal",
    "dragon",
    "phoenix",
    "griffin",
    "unicorn",
    "pegasus",
    "sphinx",
    "kraken",
    "hydra",
    "wyvern",
    "basilisk",
    "autumn",
    "winter",
    "spring",
    "summer",
    "season",
    "weather",
    "climate",
    "nature",
    "world",
    "earth",
    "wisdom",
    "courage",
    "honor",
    "glory",
    "pride",
    "grace",
    "peace",
    "hope",
    "faith",
    "love",
    "silent",
    "hidden",
    "secret",
    "mystic",
    "magic",
    "ancient",
    "eternal",
    "divine",
    "sacred",
    "holy",
    "dancer",
    "singer",
    "poet",
    "artist",
    "writer",
    "actor",
    "dreamer",
    "thinker",
    "leader",
    "warrior",
  ],

  hard: [
    "constellation",
    "infinity",
    "eternity",
    "universe",
    "cosmos",
    "galaxy",
    "nebula",
    "quasar",
    "pulsar",
    "supernova",
    "crystal",
    "diamond",
    "sapphire",
    "emerald",
    "ruby",
    "amethyst",
    "topaz",
    "garnet",
    "jade",
    "opal",
    "phoenix",
    "dragon",
    "griffin",
    "unicorn",
    "pegasus",
    "sphinx",
    "kraken",
    "hydra",
    "wyvern",
    "basilisk",
    "mystical",
    "magical",
    "eternal",
    "divine",
    "sacred",
    "ancient",
    "legendary",
    "mythical",
    "celestial",
    "cosmic",
    "serenity",
    "tranquility",
    "harmony",
    "balance",
    "wisdom",
    "courage",
    "honor",
    "glory",
    "pride",
    "grace",
    "enchantment",
    "bewitchment",
    "sorcery",
    "wizardry",
    "alchemy",
    "mysticism",
    "occultism",
    "thaumaturgy",
    "necromancy",
    "divination",
    "constellation",
    "astronomy",
    "cosmology",
    "astrology",
    "meteorology",
    "geology",
    "biology",
    "physics",
    "chemistry",
    "mathematics",
    "philosophy",
    "psychology",
    "sociology",
    "anthropology",
    "archaeology",
    "geography",
    "history",
    "literature",
    "art",
    "music",
    "adventure",
    "journey",
    "quest",
    "mission",
    "expedition",
    "voyage",
    "pilgrimage",
    "odyssey",
    "saga",
    "epic",
    "wonderland",
    "dreamland",
    "fairyland",
    "neverland",
    "wonderland",
    "dreamland",
    "fairyland",
    "neverland",
    "wonderland",
    "dreamland",
  ],

  bonus: [
    "supernova",
    "quasar",
    "pulsar",
    "nebula",
    "galaxy",
    "cosmos",
    "infinity",
    "eternity",
    "universe",
    "constellation",
    "dragon",
    "phoenix",
    "griffin",
    "unicorn",
    "pegasus",
    "sphinx",
    "kraken",
    "hydra",
    "wyvern",
    "basilisk",
    "crystal",
    "diamond",
    "sapphire",
    "emerald",
    "ruby",
    "amethyst",
    "topaz",
    "garnet",
    "jade",
    "opal",
    "mystical",
    "magical",
    "eternal",
    "divine",
    "sacred",
    "ancient",
    "legendary",
    "mythical",
    "celestial",
    "cosmic",
    "serenity",
    "tranquility",
    "harmony",
    "balance",
    "wisdom",
    "courage",
    "honor",
    "glory",
    "pride",
    "grace",
    "enchantment",
    "bewitchment",
    "sorcery",
    "wizardry",
    "alchemy",
    "mysticism",
    "occultism",
    "thaumaturgy",
    "necromancy",
    "divination",
    "constellation",
    "astronomy",
    "cosmology",
    "astrology",
    "meteorology",
    "geology",
    "biology",
    "physics",
    "chemistry",
    "mathematics",
    "philosophy",
    "psychology",
    "sociology",
    "anthropology",
    "archaeology",
    "geography",
    "history",
    "literature",
    "art",
    "music",
    "adventure",
    "journey",
    "quest",
    "mission",
    "expedition",
    "voyage",
    "pilgrimage",
    "odyssey",
    "saga",
    "epic",
    "wonderland",
    "dreamland",
    "fairyland",
    "neverland",
    "wonderland",
    "dreamland",
    "fairyland",
    "neverland",
    "wonderland",
    "dreamland",
  ],
};

// Function to get a random word from a specific difficulty
function getRandomWord(difficulty) {
  const wordList = words[difficulty];
  return wordList[Math.floor(Math.random() * wordList.length)];
}

// Function to calculate points for a word
function getWordPoints(word) {
  const basePoints = 10;
  const lengthBonus = word.length * 2;
  const difficultyMultiplier = {
    easy: 1,
    medium: 1.5,
    hard: 2,
    bonus: 3,
  };

  return (
    Math.floor(basePoints + lengthBonus) *
    difficultyMultiplier[getWordDifficulty(word)]
  );
}

// Function to determine word difficulty
function getWordDifficulty(word) {
  if (words.easy.includes(word)) return "easy";
  if (words.medium.includes(word)) return "medium";
  if (words.hard.includes(word)) return "hard";
  if (words.bonus.includes(word)) return "bonus";
  return "easy"; // Default to easy if word not found
}
